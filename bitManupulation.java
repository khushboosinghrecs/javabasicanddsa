
// bit Manipulation=> solving problem at bit level => bit =smallest unit of our computer programmint 0/1; 
// int a, int b=20; int arr[] ={1, 3, 4, 5} => converted into 0 |1 =>computer can only understand 0|1;
// int 4 byte = 32 bits => 4 *8 = 01
// 2^31.........2^3 + 2^2 +2^1 +2^0=>.....+...16+8+ 4+ 2 + 1 =>

// 5 = 000 ..+1*4 + 0*2 + 1*1=>  = 0+ 1*2^2 + 0*2^1 + 1*2^0 =>5=> 101
// 6 = 000   + 1*4 + 1*2 + 0*1=> 000+ 1*2*2 +1*2^1+ 0*2^0=> 000000110
// 7 = 1*4 + 1*2+ 1 *1 ==111
// 8=>1*8+0*4* 0*2 +0*1= 1000

// 0*2^31 +..... 0*2^3+ 0*2^2 +0*2^1 +0*2^0 =>0
//  0*2^31 +..... 0*2^3+ 0*2^2 +0*2^1+1*2^0 =>
// 0=> 0000000000000....., 1=> 000000000000001, 2=> 0000000000000010
// number =>bits
// 0=> 0      => 0*(2^0)=> 0*1 =0
// 1=> 1	=> 1*(2^0)=>1* 1 =1
// 2=> 10		=>  1*(2^1)+0*(2^0) =>     1*2 +0*1 => 2+ 0 => 2
// 3=> 011   =>0*(2^2)+1*(2^1) + 1*(2^0) => 0*(4)+ 1*2 + 1*1 = 0 + 2 + 1=>3
// 4=> 100 =>1*(2^2)+0*(2^1)+0*(2^0) =>  1*4+0*2+0*1 => 4+0+0 =>4
// 5=> 101 => 1*(2^2)+ 0*(2^1) +1*(2^0)=>  1*4 +0*2 + 1*1 => 4+0+1=> 5
// 6=>110
// 7=> 111
// 8=>1000
//9=> 8+1=> 1001
// 10=> 1010
//11 => 1011 11/2=>
// 15 =1111


public class bitManupulation {
    
}
